# generate client keys
---
- name: create openvpn server directories
  file: 
    path='{{item}}'
    state=directory
    owner=root
    group=root
    mode=0700
  with_items:
    - '{{ ssl_capath }}'
    - '{{ ssl_certpath }}'
    - '{{ ssl_keypath }}'

- name: Create files from keys in inventory
  copy: content='{{ item.key }}'
        dest={{ ssl_keypath }}/{{ item.name }}.key
        owner=root
        group=root
        mode=700
  with_items: client.ssl_certs_inventory
  when: item.key is defined

- name: Create files from certs in inventory
  copy: content='{{ item.cert }}'
        dest={{ ssl_certpath }}/{{ item.name }}.pem
        owner=root
        group=root
        mode=700
  with_items: client.ssl_certs_inventory
  when: item.cert is defined

- name: Create key pass file
  copy: content='{{ client.passphrase }}'
        dest=/etc/openvpn/client.pass
        owner=root
        group=root
        mode=400

# - name: Copy openssl extensions
#   copy: >
#     src=openssl-client.ext
#     dest="{{openvpn_key_dir}}"
#     owner=root
#     group=root
#     mode=0400

# - name: generate client key
#   command: openssl req -nodes -newkey rsa:{{openvpn_rsa_bits}} -keyout {{item}}.key -out {{item}}.csr -days 3650 -subj /CN=OpenVPN-Client-{{inventory_hostname}}-{{item}}/
#     chdir="{{openvpn_key_dir}}"
#     creates={{item}}.key
#   with_items: "{{clients}}"
# 
# - name: sign client key
#   command: openssl x509 -req -in {{item}}.csr -out {{item}}.crt -CA ca.crt -CAkey ca-key.pem -sha256 -days 3650 -extfile openssl-client.ext
#     chdir="{{openvpn_key_dir}}"
#     creates={{item}}.crt
#   with_items: "{{clients}}"
# 
# - name: register server ca key
#   slurp: src="{{openvpn_key_dir}}/ca.crt"
#   register: ca_cert
# 
# - name: register tls-auth key
#   slurp: src="{{openvpn_key_dir}}/ta.key"
#   register: tls_auth
# 
# - name: register client certs
#   slurp: src="{{openvpn_key_dir}}/{{item}}.crt"
#   with_items: "{{clients}}"
#   register: client_certs
# 
# - name: register client keys
#   slurp: src="{{openvpn_key_dir}}/{{item}}.key"
#   with_items: "{{clients}}"
#   register: client_keys

- name: Generate client config
  template: >
    src=client.ovpn.j2
    dest=/etc/openvpn/client.ovpn
    owner=root
    group=root
    mode=0400

- name: Copy scripts
  template: >
    src=start-client.sh.j2
    dest='{{ssl_scriptpath}}'
    owner=root
    group=root
    mode=0555

  # - name: fetch client config
  #   fetch: >
  #     src=/etc/openvpn/{{item}}-{{inventory_hostname}}.ovpn
  #     dest=/tmp/ansible/{{item}}/{{inventory_hostname}}.ovpn
  #     flat=yes
  #   with_items: "{{clients}}"
